#Задание 1
# Реализовать скрипт, в котором должна быть предусмотрена функция расчёта 
# заработной платы сотрудника. Используйте в нём формулу: 
# (выработка в часах*ставка в час) + премия. Во время выполнения расчёта для 
# конкретных значений необходимо запускать скрипт с параметрами.

from sys import argv

salary_calk, first_param, second_param, third_param = argv

d = 0
# Получение первого параметра
a = input("Укажите количество отработанных часов: ")
# Получение второго параметра
b = input("Укажите ставку в час: ")
# Получение третьего параметра
c = input("Укажите размер премии: ")
a = int(a)
b = int(b)
c = int(c)

def salary_calk(a, b, c):
    d = a * b + c 
    return d

salary = salary_calk(a, b, c)

print("File name: ", salary_calk)
print("Param 1: ", a)
print("Param 2: ", b)
print("Param 3: ", c)
print("Размер зарплаты составил: ", salary)

    
    
    
# Задание 2
# Представлен список чисел. Необходимо вывести элементы исходного списка, 
# значения которых больше предыдущего элемента.
# Подсказка: элементы, удовлетворяющие условию, оформить в виде списка. 
# Для его формирования используйте генератор.
# Пример исходного списка: [300, 2, 12, 44, 1, 1, 4, 10, 7, 1, 78, 123, 55].
# Результат: [12, 44, 4, 10, 78, 123].

import random

ini_list = [random.randint(0, 333) for el in range(10)]
big_list = [ini_list[el] for el in range(1, len(ini_list)) if ini_list[el] > ini_list[el - 1]]
print(ini_list)
print(big_list)

# Задание 3
# Для чисел в пределах от 20 до 240 найти числа, кратные 20 или 21. 
# Решите задание в одну строку.
# Подсказка: используйте функцию range() и генератор.

a = [x for x in range(20, 241)]
b = [a[x] for x in range(0, len(a)) if x % 20 == 0 or x % 21 == 0]
print(a)
print(b)

# Задание 4
# Представлен список чисел. Определите элементы списка, не имеющие повторений. 
# Сформируйте итоговый массив чисел, соответствующих требованию. Элементы 
# выведите в порядке их следования в исходном списке. Для выполнения задания 
# обязательно используйте генератор.
# Пример исходного списка: [2, 2, 2, 7, 23, 1, 44, 44, 3, 2, 10, 7, 4, 11].
# Результат: [23, 1, 3, 10, 4, 11]

import random

b = []
c = []
a = [random.randint(0, 33) for el in range(20)]
for el in a:
    if a.count(el) == 1:
        b.append(el)
    else:
        c.append(el)
print(a)
print(b)

# Задание 5 
# Реализовать формирование списка, используя функцию range() и возможности 
# генератора. В список должны войти чётные числа от 100 до 1000 
# (включая границы). Нужно получить результат вычисления произведения всех 
# элементов списка.
# Подсказка: использовать функцию reduce().

from functools import reduce
from random import randrange

a = [random.randrange(100, 1001, 2) for el in range(5)]
b = reduce((lambda x, y: x * y), a)
print(b)

# Задание 6
# Реализовать два небольших скрипта:
# итератор, генерирующий целые числа, начиная с указанного;
# итератор, повторяющий элементы некоторого списка, определённого заранее.
# Подсказка: используйте функцию count() и cycle() модуля itertools. 
# Обратите внимание, что создаваемый цикл не должен быть бесконечным. 
# Предусмотрите условие его завершения. 
#### Например, в первом задании выводим целые числа, начиная с 3. При 
# достижении числа 10 — завершаем цикл. Вторым пунктом необходимо 
# предусмотреть условие, при котором повторение элементов списка прекратится.

from itertools import count
from sys import argv

itr_1, param = argv
param = int(input("Введите целое число от 0 до 20: "))

for el in count(param):
    if el > 20:
        break
    else:
        print(el)

from itertools import cycle        
from sys import argv

itr_1, param = argv

param = input("Укажите слово для повторения его букв: ")
с = 0
for el in cycle(param):
    if с > 10:
        break
    print(el)
    с += 1
    
# Задание 7. 
# Реализовать генератор с помощью функции с ключевым словом yield, 
# создающим очередное значение. При вызове функции должен создаваться 
# объект-генератор. Функция вызывается следующим образом: for el in fact(n). 
# Она отвечает за получение факториала числа. В цикле нужно выводить только 
# первые n чисел, начиная с 1! и до n!.
# Подсказка: факториал числа n — произведение чисел от 1 до n. Например, 
# факториал четырёх 4! = 1 * 2 * 3 * 4 = 24.


import math
from itertools import count

n = int(input("Введите целое число от 0 до 10: "))       

def generator(n):
    for el in count(1):
        if el > n:
            break
        else:
            math.factorial(el)
        yield math.factorial(el)

g = generator(n)
print(g)

for el in g:
    print(el)
